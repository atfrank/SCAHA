#!/usr/bin/env Rscript
suppressPackageStartupMessages(library("optparse"))
suppressPackageStartupMessages(library("plyr"))
suppressPackageStartupMessages(library("clue"))

option_list <- list( 
  make_option(c("-p", "--parallel"), action="store_true", default=FALSE,
              help="run assignment in parallel [default %default]"),
  make_option(c("-n", "--nprocessors"), type="integer", default=18,
              help="number of processor to use for parallel processing [default %default]"),
  make_option(c("-o", "--output"), type="character",default="tests/assigned_shifts",
              help="output prefix name [default %default]"),
  make_option(c("-t", "--testing"), action="store_true", default=FALSE,
              help="run in testing mode; correct assignment are known and provided [default %default]"),                            
  make_option(c("-v", "--verbose"), action="store_true", default=FALSE,
              help="print header and progress information [default %default]")
)
parser <- OptionParser(usage = "%prog [options] predicted_chemical_shifts chemical_shift_peaks", option_list=option_list)

arguments <- parse_args(parser, positional_arguments = TRUE)
opt <- arguments$options

if(length(arguments$args) != 2) {
  cat("Incorrect number of required positional arguments\n\n")
  print_help(parser)
  stop()
} else {
  if (opt$verbose){
    cat("Project: SCHAHA -- Structure-Based Chemical-Shift Assignment via the Hungarian Algorithm\n")
    cat("Author: William Fuh\n")
    cat("Author: Aaron T. Frank\n")
    cat(sprintf("%s\n",date()))
  }
  
  # load library and our custom functions
  library(plyr)
  
  # library SCAHA R library
  source("R/library.R")
  
  # get arguments
  predicted_shifts_file <- arguments$args[1]
  unassgined_data_file <- arguments$args[2]

  # get options
  iter <- opt$iterations
  ifelse(opt$freq_output > iter, freq_output <- iter, freq_output <- opt$freq_output)
  scale <- opt$scale
  output <- opt$output
  parallel <- opt$parallel
  nprocessors <- opt$nprocessors
  testing <- opt$testing
  weighted <- opt$weighted
  verbose <- opt$verbose
  
  # set up parallel backend
  if (parallel){
    suppressPackageStartupMessages(library(doParallel))
		doParallel::registerDoParallel(cores = nprocessors)  
  }

  # assign chemical shifts
  SCAHA(assgined_computed_cs_filename = predicted_shifts_file, unassgined_data = unassgined_data, testing = testing, output = output, parallel = parallel)
}


